name: 08-Variables
run-name: 08-Varaibles

on:
    workflow_dispatch:
    # push:

env:
    WORKFLOW_VAR: "Im workflow env var"
    OVERWRITTEN_VAR: "I will be overwritten"
    UNDEFINED_ENV_VAR: ${{ vars.UNDEFINED_VAR || 'Default-own-value' }}

jobs:
    echo:
        runs-on: ubuntu-latest
        env:
            JOB_VAR: "Im job env var"
            OVERWRITTEN_VAR: "I have been overwritten at job level"

        steps:
            - name: Prin Env Vars
              env:
                  STEP_VAR: "Im a step env var"
                  step_var2: "Im another step env var"
              run: |
                echo "STEP VAR : ${{ env.STEP_VAR }}"
                echo "STEP VAR 2 : ${{ env.step_var2 }}"
                echo "JOB ENV VAR: ${{ env.JOB_VAR }}"
                echo "WORKFLOW ENV VAR: ${{ env.WORKFLOW_VAR }}"
                echo "OVERWRITTEN VAR: ${{ env.OVERWRITTEN_VAR }}"
            
            - name: Print overwritten var
              env:
                OVERWRITTEN_VAR: "I will be overwritten in step level"
              run: |
                echo "OVERWRITTEN VAR: ${{ env.OVERWRITTEN_VAR }}"
    
    echo-staging:
        runs-on: ubuntu-latest
        environment: ascent
        steps:
            - name: Print the staging env value
              run: |
                echo "Staging var value: ${{ vars.TARGET_VAR }}"
                
    echo-prod:
        runs-on: ubuntu-latest
        environment: haven
        steps:
            - name: Print the Prod env value
              run: |
                echo "Prod var value: ${{ vars.TARGET_VAR }}"
                echo "Overwritten value: ${{ vars.OVERWRITTEN_VAR }}"
    
    echo-undefined:
        runs-on: ubuntu-latest
        steps:
            - name: Print the undefined vr
              run: |
                echo "Undefined var: ${{ env.UNDEFINED_ENV_VAR }}"
